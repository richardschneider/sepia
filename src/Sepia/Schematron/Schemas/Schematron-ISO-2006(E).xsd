<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema 
targetNamespace="http://purl.oclc.org/dsdl/schematron" 
xmlns:sch="http://purl.oclc.org/dsdl/schematron" 
xmlns="http://purl.oclc.org/dsdl/schematron" 
xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
>
  <xsd:attributeGroup name="rich">
    <xsd:attribute name="fpi" type="xsd:string"/>
    <xsd:attribute name="icon" type="xsd:anyURI"/>
    <xsd:attribute name="see" type="xsd:anyURI"/>
  </xsd:attributeGroup>

  <xsd:attributeGroup name="linkable">
    <xsd:attribute name="role" type="xsd:NMTOKEN"/>
    <xsd:attribute name="subject" type="xsd:string" use="optional" default="."/>
  </xsd:attributeGroup>

  <xsd:element name="active">
    <xsd:complexType mixed="true">
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element ref="sch:dir"/>
        <xsd:element ref="sch:emph"/>
        <xsd:element ref="sch:span"/>
      </xsd:choice>
      <xsd:attribute name="pattern" type="xsd:IDREF" use="required"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="assert">
    <xsd:complexType mixed="true">
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element ref="sch:name"/>
        <xsd:element ref="sch:value-of"/>
        <xsd:element ref="sch:emph"/>
        <xsd:element ref="sch:dir"/>
        <xsd:element ref="sch:span"/>
        <xsd:any namespace="##other" processContents="lax"/>
      </xsd:choice>
      <xsd:attribute name="test" type="xsd:string" use="required"/>
      <xsd:attribute name="flag" type="xsd:string"/>
      <xsd:attribute name="id" type="xsd:ID"/>
      <xsd:attribute name="diagnostics" type="xsd:IDREFS"/>
      <xsd:attributeGroup ref="rich"/>
      <xsd:attributeGroup ref="linkable"/>
      <xsd:anyAttribute namespace="##other" processContents="lax"/>
      <!--xsd:attribute name="xml:lang" type="xsd:language" /-->
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="diagnostic">
    <xsd:complexType mixed="true">
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element ref="sch:value-of"/>
        <xsd:element ref="sch:emph"/>
        <xsd:element ref="sch:dir"/>
        <xsd:element ref="sch:span"/>
        <xsd:any namespace="##other" processContents="lax"/>
      </xsd:choice>
      <xsd:attribute name="id" type="xsd:ID" use="required"/>
      <xsd:attributeGroup ref="rich"/>
      <xsd:anyAttribute namespace="##other" processContents="lax"/>
      <!--xsd:attribute name="xml:lang" type="xsd:language" /-->
    </xsd:complexType>
  </xsd:element>
  
  <xsd:element name="diagnostics">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="include" minOccurs="0" maxOccurs="unbounded"/>
        <xsd:element ref="diagnostic" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="dir">
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="value">
            <xsd:simpleType>
              <xsd:restriction base="xsd:NMTOKEN">
                <xsd:enumeration value="ltr"/>
                <xsd:enumeration value="rtl"/>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  
  <xsd:element name="emph" type="xsd:string"/>
  
  <xsd:element name="extends">
    <xsd:complexType>
      <xsd:attribute name="rule" type="xsd:IDREF" use="required"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="let">
    <xsd:complexType>
      <xsd:attribute name="name" type="xsd:NMTOKEN" use="required"/>
      <xsd:attribute name="value" type="xsd:string" use="required"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="include">
    <xsd:complexType>
      <xsd:attribute name="href" type="xsd:anyURI"/>
    </xsd:complexType>
  </xsd:element>
  
  <xsd:element name="name">
    <xsd:complexType>
      <xsd:attribute name="path" type="xsd:string" use="optional" default="."/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="ns">
    <xsd:complexType>
      <xsd:attribute name="uri" type="xsd:anyURI" use="required"/>
      <xsd:attribute name="prefix" type="xsd:NCName"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="p">
    <xsd:complexType mixed="true">
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element ref="sch:dir"/>
        <xsd:element ref="sch:emph"/>
        <xsd:element ref="sch:span"/>
      </xsd:choice>
      <xsd:attribute name="id" type="xsd:ID"/>
      <xsd:attribute name="class" type="xsd:string"/>
      <xsd:attribute name="icon" type="xsd:anyURI"/>
      <xsd:anyAttribute namespace="##other" processContents="lax"/>
      <!--xsd:attribute name="xml:lang" type="xsd:language" /-->
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="param">
    <xsd:complexType>
      <xsd:attribute name="name" type="xsd:NMTOKEN" use="required"/>
      <xsd:attribute name="value" type="xsd:string" use="required"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="pattern">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="include" minOccurs="0" maxOccurs="unbounded"/>
        <xsd:element ref="title" minOccurs="0" maxOccurs="1"/>
        <xsd:element ref="p" minOccurs="0" maxOccurs="unbounded"/>
        <xsd:choice>
          <xsd:sequence>
            <xsd:element ref="let" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element ref="sch:rule" maxOccurs="unbounded"/>
          </xsd:sequence>
          <xsd:sequence>
            <xsd:element ref="param" minOccurs="0" maxOccurs="unbounded"/>
          </xsd:sequence>
      </xsd:choice>

      </xsd:sequence>
      <xsd:attributeGroup ref="rich"/>
      <xsd:attribute name="id" type="xsd:ID"/>
      <xsd:attribute name="abstract" type="xsd:boolean" use="optional" default="false"/>
      <xsd:attribute name="is-a" type="xsd:IDREF"/>
    </xsd:complexType>
  </xsd:element>
  
  <xsd:element name="phase">
    <xsd:complexType>
      <xsd:sequence >
        <xsd:element ref="include" minOccurs="0" maxOccurs="unbounded"/>
        <xsd:choice minOccurs="1" maxOccurs="unbounded">
          <xsd:element ref="sch:p"/>
          <xsd:element ref="let"/>
          <xsd:element ref="sch:active"/>
        </xsd:choice>
      </xsd:sequence>
      <xsd:attribute name="id" type="xsd:ID" use="required"/>
      <xsd:attributeGroup ref="rich"/>
    </xsd:complexType>
  </xsd:element>
  
  <xsd:element name="report">
    <xsd:complexType mixed="true">
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element ref="sch:name"/>
        <xsd:element ref="sch:value-of"/>
        <xsd:element ref="sch:emph"/>
        <xsd:element ref="sch:dir"/>
        <xsd:element ref="sch:span"/>
        <xsd:any namespace="##other" processContents="lax"/>
      </xsd:choice>
      <xsd:attribute name="test" type="xsd:string" use="required"/>
      <xsd:attribute name="flag" type="xsd:string"/>
      <xsd:attribute name="id" type="xsd:ID"/>
      <xsd:attribute name="diagnostics" type="xsd:IDREFS"/>
      <xsd:attributeGroup ref="rich"/>
      <xsd:attributeGroup ref="linkable"/>
      <xsd:anyAttribute namespace="##other" processContents="lax"/>
      <!--xsd:attribute name="xml:lang" type="xsd:language" /-->
    </xsd:complexType>
  </xsd:element>
  
  <xsd:element name="rule">
    <xsd:complexType>
      <xsd:choice maxOccurs="unbounded">
        <xsd:element ref="sch:assert"/>
        <xsd:element ref="sch:report"/>
        <xsd:element ref="sch:include"/>
        <xsd:element ref="sch:extends"/>
        <xsd:element ref="sch:let"/>
      </xsd:choice>
      <xsd:attribute name="id" type="xsd:ID"/>
      <xsd:attribute name="flag" type="xsd:string"/>
      <xsd:attribute name="context" type="xsd:string"/>
      <xsd:attribute name="abstract" type="xsd:boolean" use="optional" default="false"/>
      <xsd:attributeGroup ref="rich"/>
      <xsd:attributeGroup ref="linkable"/>
    </xsd:complexType>
  </xsd:element>
  
  <xsd:element name="schema">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="include" minOccurs="0" maxOccurs="unbounded"/>
        <xsd:element ref="sch:title" minOccurs="0"/>
        <xsd:element ref="sch:ns" minOccurs="0" maxOccurs="unbounded"/>
        <xsd:element ref="sch:p" minOccurs="0" maxOccurs="unbounded"/>
        <xsd:element ref="let" minOccurs="0" maxOccurs="unbounded"/>
        <xsd:element ref="sch:phase" minOccurs="0" maxOccurs="unbounded"/>
        <xsd:element ref="sch:pattern" minOccurs="1" maxOccurs="unbounded"/>
        <xsd:element ref="sch:p" minOccurs="0" maxOccurs="unbounded"/>
        <xsd:element ref="sch:diagnostics" minOccurs="0"/>
      </xsd:sequence>
      <xsd:attribute name="id" type="xsd:ID"/>
      <xsd:attribute name="schemaVersion" type="xsd:string"/>
      <xsd:attribute name="defaultPhase" type="xsd:IDREF"/>
      <xsd:attribute name="queryBinding" type="xsd:string" use="optional" default="xslt"/>
      <xsd:attributeGroup ref="rich"/>
      <xsd:anyAttribute namespace="##other" processContents="lax"/>
      <!--xsd:attribute name="xml:lang" type="xsd:language" /-->
    </xsd:complexType>
  </xsd:element>
  
  <xsd:element name="span">
    <xsd:complexType>
          <xsd:attribute name="class" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>
  
  <xsd:element name="title">
    <xsd:complexType mixed="true">
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element ref="sch:dir"/>
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>
  
  <xsd:element name="value-of">
    <xsd:complexType>
      <xsd:attribute name="select" type="xsd:string" use="required"/>
    </xsd:complexType>
  </xsd:element>

</xsd:schema>
